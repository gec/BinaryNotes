
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

using System;
using org.bn.attributes;
using org.bn.attributes.constraints;
using org.bn.coders;
using org.bn.types;
using org.bn;

namespace org.bn.coders.test_asn {


    [ASN1PreparedElement]
    [ASN1Sequence ( Name = "SetWithDefault", IsSet = true  )]
    public class SetWithDefault : IASN1PreparedElement {
                    
	private long nodefault_ ;
	[ASN1Integer( Name = "" )]
    
        [ASN1Element ( Name = "nodefault", IsOptional =  false , HasTag =  true, Tag = 2 , HasDefaultValue =  false )  ]
    
        public long Nodefault
        {
            get { return nodefault_; }
            set { nodefault_ = value;  }
        }
        
                
          
	private TestPRN nodefault2_ ;
	
        [ASN1Element ( Name = "nodefault2", IsOptional =  false , HasTag =  true, Tag = 1 , HasDefaultValue =  false )  ]
    
        public TestPRN Nodefault2
        {
            get { return nodefault2_; }
            set { nodefault2_ = value;  }
        }
        
                
          
	private string default3_ ;
	[ASN1String( Name = "", 
        StringType =  UniversalTags.PrintableString , IsUCS = false )]
        [ASN1Element ( Name = "default3", IsOptional =  false , HasTag =  true, Tag = 3 , HasDefaultValue =  true )  ]
    
        public string Default3
        {
            get { return default3_; }
            set { default3_ = value;  }
        }
        
                
  

            public void initWithDefaults() {
            	string param_Default3 =         
            "DDDdd";
        Default3 = param_Default3;
    
            }


            private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(SetWithDefault));
            public IASN1PreparedElementData PreparedData {
            	get { return preparedData; }
            }

            
    }
            
}
