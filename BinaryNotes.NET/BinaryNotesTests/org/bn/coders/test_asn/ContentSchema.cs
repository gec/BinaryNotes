
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

using System;
using org.bn.attributes;
using org.bn.attributes.constraints;
using org.bn.coders;
using org.bn.types;
using org.bn;

namespace org.bn.coders.test_asn {


    [ASN1PreparedElement]
    [ASN1Enum ( Name = "ContentSchema")]
    public class ContentSchema : IASN1PreparedElement {        
        public enum EnumType {
            
            [ASN1EnumItem ( Name = "multipart_any", HasTag = true , Tag = 110 )]
            multipart_any , 
            [ASN1EnumItem ( Name = "multipart_mixed", HasTag = true , Tag = 111 )]
            multipart_mixed , 
            [ASN1EnumItem ( Name = "multipart_form_data", HasTag = true , Tag = 112 )]
            multipart_form_data , 
            [ASN1EnumItem ( Name = "multipart_byteranges", HasTag = true , Tag = 113 )]
            multipart_byteranges , 
            [ASN1EnumItem ( Name = "multipart_alternative", HasTag = true , Tag = 114 )]
            multipart_alternative , 
            [ASN1EnumItem ( Name = "multipart_related", HasTag = true , Tag = 175 )]
            multipart_related , 
        }
        
        private EnumType val;
        
        public EnumType Value
        {
            get { return val; }
            set { val = value; }
        }        

            public void initWithDefaults()
	    {
	    }


            private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(ContentSchema));
            public IASN1PreparedElementData PreparedData {
            	get { return preparedData; }
            }

                
    }
            
}
