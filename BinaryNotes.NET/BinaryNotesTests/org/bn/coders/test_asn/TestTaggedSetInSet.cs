
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

using System;
using org.bn.attributes;
using org.bn.attributes.constraints;
using org.bn.coders;
using org.bn.types;
using org.bn;

namespace org.bn.coders.test_asn {


    [ASN1PreparedElement]
    [ASN1BoxedType ( Name = "TestTaggedSetInSet") ]
    public class TestTaggedSetInSet: IASN1PreparedElement {
            
           
        private TestTaggedSetInSetSequenceType  val;

        
       [ASN1PreparedElement]
       [ASN1Sequence ( Name = "TestTaggedSetInSet", IsSet = true  )]
       public class TestTaggedSetInSetSequenceType : IASN1PreparedElement {
                        
	private Config config1_ ;
	
        [ASN1Element ( Name = "config1", IsOptional =  false , HasTag =  false  , HasDefaultValue =  false )  ]
    
        public Config Config1
        {
            get { return config1_; }
            set { config1_ = value;  }
        }
        
                
          
	private Config2 config2_ ;
	
        [ASN1Element ( Name = "config2", IsOptional =  false , HasTag =  false  , HasDefaultValue =  false )  ]
    
        public Config2 Config2
        {
            get { return config2_; }
            set { config2_ = value;  }
        }
        
                
  
                
                public void initWithDefaults() {
            		
                }

            private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(TestTaggedSetInSetSequenceType));
            public IASN1PreparedElementData PreparedData {
            	get { return preparedData; }
            }

                
       }
                
        [ASN1Element ( Name = "TestTaggedSetInSet", IsOptional =  false , HasTag =  true, Tag = 77, 
        TagClass =  TagClasses.Application  , HasDefaultValue =  false )  ]
    
        public TestTaggedSetInSetSequenceType Value
        {
                get { return val; }        
                    
                set { val = value; }
                        
        }            

                    
        
        public TestTaggedSetInSet ()
        {
        }

            public void initWithDefaults()
	    {
	    }


            private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(TestTaggedSetInSet));
            public IASN1PreparedElementData PreparedData {
            	get { return preparedData; }
            }

        
    }
            
}
