
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

using System;
using org.bn.attributes;
using org.bn.attributes.constraints;
using org.bn.coders;
using org.bn.types;
using org.bn;

namespace org.bn.coders.test_asn {


    [ASN1PreparedElement]
    [ASN1Choice ( Name = "Data") ]
    public class Data : IASN1PreparedElement {
                    
        
	private TestPRN plain_ ;
        private bool  plain_selected = false ;
        
                
        
        [ASN1Element ( Name = "plain", IsOptional =  false , HasTag =  true, Tag = 0 , HasDefaultValue =  false )  ]
    
        public TestPRN Plain
        {
            get { return plain_; }
            set { selectPlain(value); }
        }
        
                
          
        
	private TestOCT unicode_ ;
        private bool  unicode_selected = false ;
        
                
        
        [ASN1Element ( Name = "unicode", IsOptional =  false , HasTag =  true, Tag = 1 , HasDefaultValue =  false )  ]
    
        public TestOCT Unicode
        {
            get { return unicode_; }
            set { selectUnicode(value); }
        }
        
                
          
        
	private TestOCT binary_ ;
        private bool  binary_selected = false ;
        
                
        
        [ASN1Element ( Name = "binary", IsOptional =  false , HasTag =  true, Tag = 2 , HasDefaultValue =  false )  ]
    
        public TestOCT Binary
        {
            get { return binary_; }
            set { selectBinary(value); }
        }
        
                
          
        
	private string simpleType_ ;
        private bool  simpleType_selected = false ;
        
                
        [ASN1String( Name = "", 
        StringType =  UniversalTags.PrintableString , IsUCS = false )]
        [ASN1Element ( Name = "simpleType", IsOptional =  false , HasTag =  true, Tag = 3 , HasDefaultValue =  false )  ]
    
        public string SimpleType
        {
            get { return simpleType_; }
            set { selectSimpleType(value); }
        }
        
                
          
        
	private byte[] simpleOctType_ ;
        private bool  simpleOctType_selected = false ;
        
                
        [ASN1OctetString( Name = "" )]
    
        [ASN1Element ( Name = "simpleOctType", IsOptional =  false , HasTag =  true, Tag = 4 , HasDefaultValue =  false )  ]
    
        public byte[] SimpleOctType
        {
            get { return simpleOctType_; }
            set { selectSimpleOctType(value); }
        }
        
                
          
        
	private bool booleanType_ ;
        private bool  booleanType_selected = false ;
        
                
        [ASN1Boolean( Name = "" )]
    
        [ASN1Element ( Name = "booleanType", IsOptional =  false , HasTag =  true, Tag = 5 , HasDefaultValue =  false )  ]
    
        public bool BooleanType
        {
            get { return booleanType_; }
            set { selectBooleanType(value); }
        }
        
                
          
        
	private long intType_ ;
        private bool  intType_selected = false ;
        
                
        [ASN1Integer( Name = "" )]
    
        [ASN1Element ( Name = "intType", IsOptional =  false , HasTag =  true, Tag = 6 , HasDefaultValue =  false )  ]
    
        public long IntType
        {
            get { return intType_; }
            set { selectIntType(value); }
        }
        
                
          
        
	private int intBndType_ ;
        private bool  intBndType_selected = false ;
        
                
        [ASN1Integer( Name = "" )]
    [ASN1ValueRangeConstraint ( 
		
		Min = 0L, 
		
		Max = 255L 
		
		) ]
	    
        [ASN1Element ( Name = "intBndType", IsOptional =  false , HasTag =  true, Tag = 7 , HasDefaultValue =  false )  ]
    
        public int IntBndType
        {
            get { return intBndType_; }
            set { selectIntBndType(value); }
        }
        
                
          
        public bool isPlainSelected () {
            return this.plain_selected ;
        }

        


        public void selectPlain (TestPRN val) {
            this.plain_ = val;
            this.plain_selected = true;
            
            
                    this.unicode_selected = false;
                
                    this.binary_selected = false;
                
                    this.simpleType_selected = false;
                
                    this.simpleOctType_selected = false;
                
                    this.booleanType_selected = false;
                
                    this.intType_selected = false;
                
                    this.intBndType_selected = false;
                            
        }
        
          
        public bool isUnicodeSelected () {
            return this.unicode_selected ;
        }

        


        public void selectUnicode (TestOCT val) {
            this.unicode_ = val;
            this.unicode_selected = true;
            
            
                    this.plain_selected = false;
                
                    this.binary_selected = false;
                
                    this.simpleType_selected = false;
                
                    this.simpleOctType_selected = false;
                
                    this.booleanType_selected = false;
                
                    this.intType_selected = false;
                
                    this.intBndType_selected = false;
                            
        }
        
          
        public bool isBinarySelected () {
            return this.binary_selected ;
        }

        


        public void selectBinary (TestOCT val) {
            this.binary_ = val;
            this.binary_selected = true;
            
            
                    this.plain_selected = false;
                
                    this.unicode_selected = false;
                
                    this.simpleType_selected = false;
                
                    this.simpleOctType_selected = false;
                
                    this.booleanType_selected = false;
                
                    this.intType_selected = false;
                
                    this.intBndType_selected = false;
                            
        }
        
          
        public bool isSimpleTypeSelected () {
            return this.simpleType_selected ;
        }

        


        public void selectSimpleType (string val) {
            this.simpleType_ = val;
            this.simpleType_selected = true;
            
            
                    this.plain_selected = false;
                
                    this.unicode_selected = false;
                
                    this.binary_selected = false;
                
                    this.simpleOctType_selected = false;
                
                    this.booleanType_selected = false;
                
                    this.intType_selected = false;
                
                    this.intBndType_selected = false;
                            
        }
        
          
        public bool isSimpleOctTypeSelected () {
            return this.simpleOctType_selected ;
        }

        


        public void selectSimpleOctType (byte[] val) {
            this.simpleOctType_ = val;
            this.simpleOctType_selected = true;
            
            
                    this.plain_selected = false;
                
                    this.unicode_selected = false;
                
                    this.binary_selected = false;
                
                    this.simpleType_selected = false;
                
                    this.booleanType_selected = false;
                
                    this.intType_selected = false;
                
                    this.intBndType_selected = false;
                            
        }
        
          
        public bool isBooleanTypeSelected () {
            return this.booleanType_selected ;
        }

        


        public void selectBooleanType (bool val) {
            this.booleanType_ = val;
            this.booleanType_selected = true;
            
            
                    this.plain_selected = false;
                
                    this.unicode_selected = false;
                
                    this.binary_selected = false;
                
                    this.simpleType_selected = false;
                
                    this.simpleOctType_selected = false;
                
                    this.intType_selected = false;
                
                    this.intBndType_selected = false;
                            
        }
        
          
        public bool isIntTypeSelected () {
            return this.intType_selected ;
        }

        


        public void selectIntType (long val) {
            this.intType_ = val;
            this.intType_selected = true;
            
            
                    this.plain_selected = false;
                
                    this.unicode_selected = false;
                
                    this.binary_selected = false;
                
                    this.simpleType_selected = false;
                
                    this.simpleOctType_selected = false;
                
                    this.booleanType_selected = false;
                
                    this.intBndType_selected = false;
                            
        }
        
          
        public bool isIntBndTypeSelected () {
            return this.intBndType_selected ;
        }

        


        public void selectIntBndType (int val) {
            this.intBndType_ = val;
            this.intBndType_selected = true;
            
            
                    this.plain_selected = false;
                
                    this.unicode_selected = false;
                
                    this.binary_selected = false;
                
                    this.simpleType_selected = false;
                
                    this.simpleOctType_selected = false;
                
                    this.booleanType_selected = false;
                
                    this.intType_selected = false;
                            
        }
        
  

            public void initWithDefaults()
	    {
	    }

            private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(Data));
            public IASN1PreparedElementData PreparedData {
            	get { return preparedData; }
            }

    }
            
}
