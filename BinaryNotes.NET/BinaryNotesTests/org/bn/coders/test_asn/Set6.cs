
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

using System;
using org.bn.attributes;
using org.bn.attributes.constraints;
using org.bn.coders;
using org.bn.types;
using org.bn;

namespace org.bn.coders.test_asn {


    [ASN1PreparedElement]
    [ASN1BoxedType ( Name = "Set6") ]
    public class Set6: IASN1PreparedElement {
            
           
        private Set6SequenceType  val;

        
       [ASN1PreparedElement]
       [ASN1Sequence ( Name = "Set6", IsSet = true  )]
       public class Set6SequenceType : IASN1PreparedElement {
                        
	private Set4 set4_ ;
	
        [ASN1Element ( Name = "set4", IsOptional =  false , HasTag =  false  , HasDefaultValue =  false )  ]
    
        public Set4 Set4
        {
            get { return set4_; }
            set { set4_ = value;  }
        }
        
                
          
	private Set5 set5_ ;
	
        [ASN1Element ( Name = "set5", IsOptional =  false , HasTag =  false  , HasDefaultValue =  false )  ]
    
        public Set5 Set5
        {
            get { return set5_; }
            set { set5_ = value;  }
        }
        
                
  
                
                public void initWithDefaults() {
            		
                }

            private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(Set6SequenceType));
            public IASN1PreparedElementData PreparedData {
            	get { return preparedData; }
            }

                
       }
                
        [ASN1Element ( Name = "Set6", IsOptional =  false , HasTag =  true, Tag = 56, 
        TagClass =  TagClasses.Application  , HasDefaultValue =  false )  ]
    
        public Set6SequenceType Value
        {
                get { return val; }        
                    
                set { val = value; }
                        
        }            

                    
        
        public Set6 ()
        {
        }

            public void initWithDefaults()
	    {
	    }


            private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(Set6));
            public IASN1PreparedElementData PreparedData {
            	get { return preparedData; }
            }

        
    }
            
}
